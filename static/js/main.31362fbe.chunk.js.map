{"version":3,"sources":["components/Section/Section.js","components/Notification/Notification.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/App/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css"],"names":["Section","title","children","className","styles","feedback","Notification","message","Statistics","options","total","countTotalFeedback","positivePercentage","map","elem","option","toUpperCase","slice","feedbacks","FeedbackOption","addFeedback","feedbackControl","borderButton","type","name","onClick","App","state","event","currentTarget","setState","preState","el","reduce","accumulator","currentValue","countPositiveFeedbackPercentage","goodFeedbacks","find","Math","round","this","FeedbackOptions","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qRAYeA,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAOC,SAA3B,UACE,6BAAKJ,IACJC,M,gBCDQI,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC8BEC,EA7BI,SAAC,GAKb,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,mBAEA,OACE,sBAAKT,UAAWC,IAAOI,WAAvB,UACE,4CACCG,IAAuB,EACtB,qCACGF,EAAQI,KAAI,SAAAC,GACX,OACE,8BACGA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKC,OAAOE,MAAM,GADpD,IACyD,IACtDH,EAAKI,YAFAJ,EAAKC,WAMjB,wCAAWL,EAAX,OACA,oDAAuBE,EAAvB,UAGF,cAAC,EAAD,CAAcL,QAAQ,0B,gBCFfY,EAtBQ,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAaX,EAAc,EAAdA,QACrC,OACE,8BACE,qBAAKN,UAAWC,IAAOiB,gBAAvB,SACGZ,EAAQI,KAAI,SAAAC,GACX,OACE,wBAEEX,UAAWC,IAAOkB,aAAe,IAAMlB,IAAOU,EAAKC,QACnDQ,KAAK,SACLC,KAAMV,EAAKC,OACXU,QAASL,EALX,SAOGN,EAAKC,QANDD,EAAKC,gBCiDTW,E,4MApDbC,MAAQ,CACNlB,QAAS,CACP,CAAEM,OAAQ,OAAQG,UAAW,GAC7B,CAAEH,OAAQ,UAAWG,UAAW,GAChC,CAAEH,OAAQ,MAAOG,UAAW,GAC5B,CAAEH,OAAQ,UAAWG,UAAW,K,EAGpCE,YAAc,SAAAQ,GACZ,IAAMJ,EAAOI,EAAMC,cAAcL,KACjC,EAAKM,UAAS,SAAAC,GACZ,MAAO,CACLtB,QAASsB,EAAStB,QAAQI,KAAI,SAAAmB,GAC5B,OAAIA,EAAGjB,SAAWS,EACT,2BAAKQ,GAAZ,IAAgBd,UAAWc,EAAGd,UAAY,IAErCc,U,EAKfrB,mBAAqB,WAEnB,OADoB,EAAKgB,MAAjBlB,QACOwB,QAAO,SAACC,EAAaC,GAClC,OAAOD,EAAcC,EAAajB,YACjC,I,EAELkB,gCAAkC,SAAAzB,GAAuB,IAEjD0B,EADc,EAAKV,MAAjBlB,QACsB6B,MAAK,SAAAN,GAAE,MAAkB,SAAdA,EAAGjB,UAAmBG,UAC/D,OAAOqB,KAAKC,MACV7B,KAAyB0B,EAAgB1B,IAAwB,M,4CAGrE,WAAU,IACAF,EAAYgC,KAAKd,MAAjBlB,QACR,OACE,eAAC,EAAD,CAASR,MAAO,wBAAhB,UACE,cAACyC,EAAD,CAAiBtB,YAAaqB,KAAKrB,YAAaX,QAASA,IACzD,cAAC,EAAD,CACEA,QAASA,EACTC,MAAO+B,KAAK9B,qBACZA,mBAAoB8B,KAAK9B,mBACzBC,mBAAoB6B,KAAKL,gCACvBK,KAAK9B,6B,GA7CCgC,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,aAAe,sCAAsC,KAAO,8BAA8B,QAAU,iCAAiC,IAAM,+B,kBCAxND,EAAOC,QAAU,CAAC,SAAW,4B,kBCA7BD,EAAOC,QAAU,CAAC,WAAa,kC","file":"static/js/main.31362fbe.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.feedback}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nexport default Notification;\n","import React from 'react';\nimport styles from './Statistics.module.css';\nimport Notification from '../Notification/Notification';\n\nconst Statistics = ({\n  options,\n  total,\n  countTotalFeedback,\n  positivePercentage,\n}) => {\n  return (\n    <div className={styles.Statistics}>\n      <h2>Statistics</h2>\n      {countTotalFeedback() > 0 ? (\n        <>\n          {options.map(elem => {\n            return (\n              <p key={elem.option}>\n                {elem.option[0].toUpperCase() + elem.option.slice(1)}:{' '}\n                {elem.feedbacks}\n              </p>\n            );\n          })}\n          <p>Total: {total} </p>\n          <p>Positive feedback: {positivePercentage}%</p>\n        </>\n      ) : (\n        <Notification message=\"No feedback given\" />\n      )}\n    </div>\n  );\n};\n\nexport default Statistics;\n","import React from 'react';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOption = ({ addFeedback, options }) => {\n  return (\n    <div>\n      <div className={styles.feedbackControl}>\n        {options.map(elem => {\n          return (\n            <button\n              key={elem.option}\n              className={styles.borderButton + ' ' + styles[elem.option]}\n              type=\"button\"\n              name={elem.option}\n              onClick={addFeedback}\n            >\n              {elem.option}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default FeedbackOption;\n","import React, { Component } from 'react';\nimport styles from './App.module.css';\nimport Section from '../Section/Section';\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\n\nclass App extends Component {\n  state = {\n    options: [\n      { option: 'good', feedbacks: 0 },\n      { option: 'neutral', feedbacks: 0 },\n      { option: 'bad', feedbacks: 0 },\n      { option: 'refrain', feedbacks: 0 },\n    ],\n  };\n  addFeedback = event => {\n    const name = event.currentTarget.name;\n    this.setState(preState => {\n      return {\n        options: preState.options.map(el => {\n          if (el.option === name) {\n            return { ...el, feedbacks: el.feedbacks + 1 };\n          }\n          return el;\n        }),\n      };\n    });\n  };\n  countTotalFeedback = () => {\n    const { options } = this.state;\n    return options.reduce((accumulator, currentValue) => {\n      return accumulator + currentValue.feedbacks;\n    }, 0);\n  };\n  countPositiveFeedbackPercentage = countTotalFeedback => {\n    const { options } = this.state;\n    const goodFeedbacks = options.find(el => el.option === 'good').feedbacks;\n    return Math.round(\n      countTotalFeedback() && (goodFeedbacks / countTotalFeedback()) * 100,\n    );\n  };\n  render() {\n    const { options } = this.state;\n    return (\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions addFeedback={this.addFeedback} options={options} />\n        <Statistics\n          options={options}\n          total={this.countTotalFeedback()}\n          countTotalFeedback={this.countTotalFeedback}\n          positivePercentage={this.countPositiveFeedbackPercentage(\n            this.countTotalFeedback,\n          )}\n        />\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackControl\":\"FeedbackOptions_feedbackControl__1G3te\",\"borderButton\":\"FeedbackOptions_borderButton__3yoVV\",\"good\":\"FeedbackOptions_good__13biB\",\"neutral\":\"FeedbackOptions_neutral__2r7Z7\",\"bad\":\"FeedbackOptions_bad__ZhYg8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Section_feedback__2VHML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Statistics\":\"Statistics_Statistics__3R-0i\"};"],"sourceRoot":""}